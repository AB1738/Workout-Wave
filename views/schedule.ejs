<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/556c7ff2e0.js" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Permanent+Marker&family=Rubik+Glitch+Pop&family=Titillium+Web:ital,wght@0,200;0,300;0,400;0,600;0,700;0,900;1,200;1,300;1,400;1,600;1,700&display=swap" rel="stylesheet">
<link rel="icon" type="image/svg+xml" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 width=%22256%22 height=%22256%22 viewBox=%220 0 100 100%22><rect width=%22100%22 height=%22100%22 rx=%2220%22 fill=%22%23000000%22></rect><path fill=%22%23ffffff%22 d=%22M15.83 71.90L15.83 71.90Q15.47 71.09 15.10 70.36Q14.73 69.63 14.37 69.04L14.37 69.04Q13.49 67.29 12.83 65.89Q12.17 64.50 11.58 62.67L11.58 62.67Q11.80 61.43 12.35 58.50Q12.90 55.57 13.64 52.09Q14.37 48.61 15.21 45.02Q16.05 41.43 16.93 38.87L16.93 38.87Q17.74 36.60 18.73 34.03Q19.71 31.47 20.92 29.31Q22.13 27.15 23.52 25.61Q24.91 24.07 26.53 23.78L26.53 23.78Q26.97 24.37 27.48 24.69Q27.99 25.02 28.43 25.17L28.43 25.17Q29.68 26.93 30.85 28.14Q32.02 29.35 33.63 30.52L33.63 30.52Q33.19 32.71 32.35 35.39Q31.51 38.06 30.59 40.77Q29.68 43.48 28.80 46.01Q27.92 48.54 27.40 50.37L27.40 50.37Q26.97 51.83 26.53 53.74L26.53 53.74Q26.16 55.35 25.76 57.62Q25.35 59.89 24.99 62.60L24.99 62.60Q26.01 62.30 27.29 61.43Q28.58 60.55 29.68 59.59L29.68 59.59Q30.99 58.50 32.24 57.25L32.24 57.25Q33.92 55.57 35.10 54.17Q36.27 52.78 37.26 51.28Q38.24 49.78 39.31 47.99Q40.37 46.19 41.83 43.70L41.83 43.70Q43.15 41.58 44.58 39.16Q46.01 36.74 47.47 34.55Q48.94 32.35 50.33 30.48Q51.72 28.61 52.89 27.59L52.89 27.59Q53.70 28.39 54.76 29.27Q55.82 30.15 57.07 30.52L57.07 30.52Q57.58 31.32 58.06 31.95Q58.53 32.57 58.97 33.15L58.97 33.15Q59.56 33.96 60.03 34.62Q60.51 35.28 60.88 36.08L60.88 36.08Q60.80 36.67 60.62 37.62Q60.44 38.57 60.22 39.71Q60.00 40.84 59.74 42.02Q59.48 43.19 59.27 44.29L59.27 44.29Q58.53 47.58 58.17 49.27Q57.80 50.95 57.65 51.90Q57.51 52.86 57.47 53.52Q57.43 54.17 57.43 55.35L57.43 55.35Q57.43 56.23 57.58 57.10L57.58 57.10Q57.73 57.91 57.91 58.75Q58.09 59.59 58.61 60.33L58.61 60.33L62.12 57.62Q63.59 56.52 64.94 54.50Q66.30 52.49 67.58 49.89Q68.86 47.29 70.10 44.25Q71.35 41.21 72.60 37.99L72.60 37.99Q73.47 35.64 74.39 33.34Q75.31 31.03 76.26 28.94Q77.21 26.86 78.13 25.13Q79.04 23.41 79.92 22.24L79.92 22.24Q81.90 23.49 83.33 24.73Q84.75 25.98 85.82 27.48Q86.88 28.98 87.50 30.92Q88.12 32.86 88.42 35.50L88.42 35.50Q86.80 38.57 85.41 41.80Q84.02 45.02 82.63 48.32L82.63 48.32Q80.87 52.56 79.00 56.77Q77.14 60.99 74.87 64.79Q72.60 68.60 69.78 71.79Q66.96 74.98 63.29 77.17L63.29 77.17Q62.27 76.95 61.54 76.95L61.54 76.95Q60.73 76.95 60.18 77.17Q59.63 77.39 59.19 77.76L59.19 77.76Q56.19 76.37 54.36 73.62Q52.53 70.87 50.77 67.50L50.77 67.50Q50.55 66.99 50.29 66.52Q50.04 66.04 49.74 65.53L49.74 65.53L48.50 63.26L47.77 61.87L46.74 62.82L45.20 64.21L44.32 65.09Q42.05 67.21 39.71 69.23Q37.37 71.24 34.80 72.89Q32.24 74.54 29.35 75.56Q26.45 76.59 23.16 76.66L23.16 76.66Q22.57 76.37 22.09 76.15Q21.62 75.93 21.18 75.71L21.18 75.71Q19.49 74.90 18.40 74.17Q17.30 73.44 15.83 71.90Z%22></path></svg>" />
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.14/index.global.min.js'></script>
<script src='fullcalendar/dist/index.global.js'></script>
    <link rel="stylesheet" href="/css/schedule.css">
    <title>My Schedule</title>
</head>
<body>
    <%-include('./partials/navbar')  %>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
            let formCreated = false; // Flag to track if form is already created

// Function to handle date click event
function handleDateClick(info) {
  // Create or update form elements
  if (!formCreated) {
    createForm(info.date);
    formCreated = true;
  } else {
    updateForm(info.date);
  }
}

// Function to create the form initially
function createForm(date) {
  const popup = document.createElement('div');
  popup.className='popup'
  const form = document.createElement('form');

  form.action = '/dashboard/schedule';
  form.method = 'POST';

  const closeBtn=document.createElement('button')
//   closeBtn.textContent='X'
  closeBtn.classList.add("btn-close")
  closeBtn.classList.add('close')

  closeBtn.addEventListener('click',(e)=>{
    e.preventDefault()
    popup.remove()
    formCreated=false
    console.log('close button clicked')
  })

  const header=document.createElement('h5')
  header.textContent='Schedule a Workout'
  const headerDiv=document.createElement('div')
  headerDiv.classList.add('header')
  headerDiv.append(closeBtn)
  headerDiv.append(header)

  // Exercise Name Input
  const formControl=document.createElement('div')
  formControl.classList.add('form-group')
  const nameLabel = document.createElement('label');
  nameLabel.htmlFor = 'workout-name';
  nameLabel.textContent = 'Exercise Name:';
  const nameInput = document.createElement('input');
  nameInput.required=true
  nameInput.type = 'text';
  nameInput.id = 'workout-name';
  nameInput.name = 'title';
  nameInput.classList.add('form-control')

  // Exercise Date Input
  const dateLabel = document.createElement('label');
  dateLabel.htmlFor = 'date';
  dateLabel.textContent = 'Exercise Date:';
  const dateInput = document.createElement('input');
  dateInput.type = 'date';
  dateInput.name = 'start';
  dateInput.id = 'date';
  dateInput.value=date.toISOString().split('T')[0];
  const today = new Date().toISOString().split('T')[0];
  dateInput.setAttribute('min', today)

  dateInput.addEventListener('change', function() {
        const selectedDate = new Date(startDateInput.value);
        const minDate = new Date(startDateInput.min);

        if (selectedDate < minDate) {
          alert('Please select a date on or after ' + startDateInput.min);
          startDateInput.value = ''; // Reset the input value
        }
      });
  
  //Hide Date from user
  dateLabel.style.display='none'
  dateInput.style.display='none'

  // Submit Button
  const btn = document.createElement('button');
  btn.classList.add('btn')
  btn.classList.add('btn-dark')
  btn.type = 'submit';
  btn.textContent = 'Add to Schedule';

  // Append elements to form
//   form.append(header)
formControl.append(nameLabel)
 formControl.append(nameInput)
 form.classList.add('needs-validation');
    form.setAttribute('novalidate', '');

    // Validate on form submission
    form.addEventListener('submit', function (event) {
        if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
        }
        form.classList.add('was-validated');
    }, false);
//   form.append(closeBtn)
  popup.append(headerDiv)
  form.append(formControl, document.createElement('br'));
  form.append(dateLabel, dateInput, document.createElement('br'));
  form.append(btn);

  // Append form to popup and popup to body
  popup.append(form);
  popup.style.fontFamily='Righteous,sans-serif'
  document.body.append(popup);

 

 
}

// Function to update form fields on subsequent date clicks
function updateForm(date) {
  const nameInput = document.getElementById('workout-name');
  const dateInput = document.getElementById('date');
  dateInput.value =date.toISOString().split('T')[0];
  console.log('Form updated with date:', date);
}






          const user = <%- JSON.stringify(user) %>;
          const event=[
            <% user.scheduledWorkouts.forEach(function(workout) { %>
            {
              id: '<%= workout.id %>',
              title: '<%= workout.title %>',
              start: '<%= new Date(new Date(workout.start).setUTCHours(0, 0, 0, 0)).toISOString().slice(0, 10) %>' 
            },
          <% }); %>
        ]
        // for(let e of event){
        //     console.log(e.id)
        // }
          var calendarEl = document.getElementById('calendar');
          var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            selectable: true,

            editable: true,
            
        droppable: true,
            events: event,
            // eventColor: '#FFFFFF',
            // eventTextColor: '#000000',
            // eventBorderColor: '#000000',

        eventDrop: async function(info) {
          var event = info.event;
            console.log(event._def.publicId)
          console.log(event._instance.range.end)
        
          // Fetch API request to update the event date in the database
          try {
            let response = await fetch(`/dashboard/update-schedule-event/${event._def.publicId}`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                start: event._instance.range.start.toISOString()
              })
            });

       

    let result = await response.json();
  
  } catch (error) {
    console.error('Fetch error:', error);
    alert('An error occurred while updating the event');
  }
},
eventClick: async function(info) {
  const event = info.event;
  const calendarWrapper=document.querySelector('.calendar-wrapper')
  const deletePopup2=document.querySelectorAll('.delete-popup')
  if(deletePopup2.length>0){
    deletePopup2[0].remove()
  }
  const deletePopup=document.createElement('div')
  const btnWrapper=document.createElement('div')
  const confirmBtn=document.createElement('button')
  const cancelDeleteBtn=document.createElement('button')
  const deletePopupHeader=document.createElement('h4')
  btnWrapper.classList.add('button-wrapper')
  confirmBtn.classList.add('btn','btn-dark','confirm-btn')
  confirmBtn.textContent='Confirm'
  cancelDeleteBtn.classList.add('btn','btn-danger','cancel-delete-btn')
  cancelDeleteBtn.textContent='Cancel'
  deletePopupHeader.textContent=`Do you want to delete this scheduled workout? `
  deletePopup.style.fontFamily='Righteous,sans-serif'
  deletePopup.classList.add('delete-popup','popup')

  cancelDeleteBtn.addEventListener('click',()=>{

    cancelDeleteBtn.parentNode.parentNode.remove();
  })
    confirmBtn.addEventListener('click',async()=>{
      const event = info.event;
      confirmBtn.parentNode.parentNode.remove();

       event.remove()
    try {
            let response = await fetch(`/dashboard/update-schedule-event/${event._def.publicId}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                
              })
            });

       

    let result = await response.json();
    // if (response.ok) {
    //                         // Redirect to the same URL to refresh the data
    //                         window.location.reload();
    //                     } 
  
  } 
  
  
  catch (error) {
    console.error('Fetch error:', error);
    alert('An error occurred while updating the event');
  }
  })
  // const popup=document.querySelector('.popup')
  // if(popup){
  //   console.log(popup)
  // }


  deletePopup.append(deletePopupHeader)
  btnWrapper.append(cancelDeleteBtn)
  btnWrapper.append(confirmBtn)
  deletePopup.append(btnWrapper)
  calendarWrapper.append(deletePopup)


  //   if(confirm('Do you want to delete this event? ' + info.event.title)){  //custom delete alert goes here
  //   event.remove()
  //   try {
  //           let response = await fetch(`/dashboard/update-schedule-event/${event._def.publicId}`, {
  //             method: 'DELETE',
  //             headers: {
  //               'Content-Type': 'application/json'
  //             },
  //             body: JSON.stringify({
                
  //             })
  //           });

       

  //   let result = await response.json();
  
  // } catch (error) {
  //   console.error('Fetch error:', error);
  //   alert('An error occurred while updating the event');
  // }}
    // alert('Coordinates: ' + info.jsEvent.pageX + ',' + info.jsEvent.pageY);
    // alert('View: ' + info.view.type);

    // change the border color just for fun
    // info.el.style.borderColor = 'red';
  },dateClick: function(info) {
      handleDateClick(info); // Call function to handle date clicks
    }


          });
          calendar.render();
        
          document.getElementById('menu-toggle').addEventListener('click', function(e) {
                e.preventDefault();
                document.getElementById('sidebar').classList.toggle('collapsed');
                setTimeout(() => {
        calendar.updateSize();
      }, 225); // Ensure this matches the transition duration
    
            });
                    // calendar.addEvent([user.scheduledWorkouts[0]] )

         

        });

      </script>
    

    <div class="calendar-container">
        <div class="sidebar" data-bs-toggle="collapse" data-bs-target id="sidebar" style="font-family: Permanent Marker,sans-serif;">
            <button class="btn btn-dark" id="menu-toggle"><i class="fa-solid fa-bars"></i></button>
  
            
               <a href="/dashboard">
                <section class="sidebar-item">
                  <button class="btn btn-alert sidebar-btn"><i class="fa-solid fa-house"> </i> Dashboard</button>
                  <button class="btn btn-alert sidebar-btn-icon">
                    <i class="fa-solid fa-house"></i>
                  </button>
                </section>
              </a> 
              <a href="/dashboard/workout">
                <section class="sidebar-item">
                  <button class="btn btn-alert sidebar-btn"><i class="fa-solid fa-dumbbell"></i> Log your workouts </button>
                  <button class="btn btn-alert sidebar-btn-icon">
                    <i class="fa-solid fa-dumbbell"></i>
                  </button>
                </section>
              </a>

              <a href="/dashboard/goals">
                <section class="sidebar-item">
                        <button class="btn btn-alert sidebar-btn"><i class="fa-solid fa-bullseye"></i> My Goals</button>
                        <button class="btn btn-alert sidebar-btn-icon">
                          <i class="fa-solid fa-bullseye"></i>
                        </button>   
                </section>
              </a>
          <a href="/dashboard/favoriteExercises">
          <section class="sidebar-item">
                  <button class="btn btn-alert sidebar-btn"><i class="fa-solid fa-heart"></i> My Favorite Exercises</button>
                  <button class="btn btn-alert sidebar-btn-icon">
                    <i class="fa-solid fa-heart"></i>
                  </button>
  
              
          </section>
        </a>
          <a href="/dashboard/workoutHistory">
          <section class="sidebar-item">
              
                  <button class="btn btn-alert sidebar-btn"><i class="fa-solid fa-table"></i> View Workout History</button>
                  <button class="btn btn-alert sidebar-btn-icon">
                    <i class="fa-solid fa-table"></i>
                  </button>
  
              
          </section>
        </a>
          <a href="/profile">
          <section class="sidebar-item">
              
                  <button class="btn btn-alert sidebar-btn"><i class="fa-solid fa-user"></i> <span class="sidebar-text">User Profile</span></button>
                  <button class="btn btn-alert sidebar-btn-icon">
                    <i class="fa-solid fa-user"></i>
                  </button>
  
              
          </section>
        </a>
          </div>

        <div class="calendar-wrapper" style="font-family: Righteous,sans-serif;">
          <div class="calendar-info">
            <h1 class="schedule-header">My Schedule</h1>
            <p class="schedule-descritpion">Click on a date on the calendar to schedule a future workout</p>
            <p class="schedule-descritpion">Drag a scheduled workout to a different date on the calendar to change the date</p>
            <p class="schedule-descritpion">Click on a scheduled workout to remove it</p>
          </div>
            <div id='calendar'></div>

          </div>
 
    </div>
   

    </div>

        
        
    </div>

</body>
</html>